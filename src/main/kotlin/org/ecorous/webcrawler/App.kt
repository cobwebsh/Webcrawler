/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package org.ecorous.webcrawler

import com.kotlindiscord.kord.extensions.ExtensibleBot
import com.kotlindiscord.kord.extensions.utils.env
import dev.kord.common.entity.Snowflake
import dev.kord.gateway.Intent
import dev.kord.gateway.PrivilegedIntent
import org.ecorous.webcrawler.database.DB
import org.ecorous.webcrawler.extensions.*

val SERVER_ID = Snowflake(
    env("SERVER").toLong()  // Get the test server ID from the env vars or a .env file
)
val APPLICATIONS_WEBHOOK_ID = Snowflake(
    env("APPLICATIONS_WEBHOOK").toLong()
)
val APPLICATIONS_CHANNEL_ID = Snowflake(
    env("APPLICATIONS_CHANNEL").toLong()
)
val ACCESS_CHANNEL_ID = Snowflake(
    env("ACCESS_CHANNEL").toLong()
)
val MODERATION_LOG_CHANNEL_ID = Snowflake(
    env("MODERATION_LOG_CHANNEL").toLong()
)
val MESSAGE_LOG_CHANNEL_ID = Snowflake(
    env("MESSAGE_LOG_CHANNEL").toLong()
)

private val TOKEN = env("TOKEN")   // Get the bot' token from the env vars or a .env file


@OptIn(PrivilegedIntent::class)
suspend fun main() {
    DB.setup()
    val bot = ExtensibleBot(TOKEN) {
        intents {
            +Intent.GuildMembers
        }
        members {
            guildsToFill?.add(SERVER_ID)
        }
        extensions {
            add(::MembershipScreeningExtension)
            add(::ModerationExtension)
            add(::LoggingExtension)
            add(::ConfigExtension)
        }
    }

    bot.start()
}
